{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport default function useApplicationData() {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: {},\n    interviewers: []\n  });\n\n  const setDay = day => setState({ ...state,\n    day\n  });\n\n  function currentSpots() {\n    axios.get(\"/api/days\").then(response => {\n      setState(prevState => {\n        return { ...prevState,\n          days: response.data\n        };\n      });\n    });\n  } // <-----------REMOVE APPOINTMENT--------->\n\n\n  function cancelInterview(id) {\n    const appointment = { ...state.appointments[id],\n      interview: null\n    };\n    const appointments = { ...state.appointments,\n      [id]: appointment\n    };\n    return axios.delete(`http://localhost:8001/api/appointments/${id}`, appointment).then(response => {\n      setState({ ...state,\n        appointments\n      });\n      currentSpots();\n    });\n  } //<----------ADD AN APPOINTMENT------------>\n\n\n  function bookInterview(id, interview) {\n    const appointment = { ...state.appointments[id],\n      interview: { ...interview\n      }\n    };\n    const appointments = { ...state.appointments,\n      [id]: appointment\n    };\n    setState({ ...state,\n      appointments\n    });\n    return axios.put(`http://localhost:8001/api/appointments/${id}`, appointment).then(response => {\n      setState({ ...state,\n        appointments\n      });\n      currentSpots();\n    });\n  }\n\n  useEffect(() => {\n    Promise.all([axios.get(\"/api/days\"), axios.get(\"/api/appointments\"), axios.get(\"/api/interviewers\")]).then(all => {\n      setState({ ...state,\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data\n      });\n    });\n  }, []);\n  return {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  };\n}","map":{"version":3,"sources":["/Users/michel/lighthouse/w7/sched/src/hooks/useApplicationData.js"],"names":["useState","useEffect","axios","useApplicationData","state","setState","day","days","appointments","interviewers","setDay","currentSpots","get","then","response","prevState","data","cancelInterview","id","appointment","interview","delete","bookInterview","put","Promise","all"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function useApplicationData() {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: {},\n    interviewers: []\n  });\n\n  const setDay = day => setState({ ...state, day });\n\n  function currentSpots() {\n  axios.get(\"/api/days\")\n  .then((response) => {\n      setState(prevState => {\n      return ({...prevState, days: response.data})}) \n  })\n  }\n\n  // <-----------REMOVE APPOINTMENT--------->\n\n  function cancelInterview (id) {\n    const appointment = {\n      ...state.appointments[id],\n      interview: null\n    };\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    };\n  \n    return axios.delete(`http://localhost:8001/api/appointments/${id}`, appointment)\n      .then((response) => {\n        setState({\n          ...state, appointments\n        });\n        currentSpots()\n      });\n  }\n\n//<----------ADD AN APPOINTMENT------------>\n\n  function bookInterview(id, interview) {\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview }\n    };\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    };\n    setState({\n      ...state,\n      appointments\n    });\n    return axios.put(`http://localhost:8001/api/appointments/${id}`, appointment)\n      .then((response) => {\n        setState({\n          ...state, appointments\n        });\n        currentSpots()\n      });\n    }\n\n\n  useEffect(() => {\n\n      Promise.all([\n        axios.get(\"/api/days\"),\n        axios.get(\"/api/appointments\"),\n        axios.get(\"/api/interviewers\"),\n\n      ])\n      .then(all => {(setState\n        ({ ...state, days:all[0].data, appointments:all[1].data, interviewers:all[2].data\n        })\n      )})\n  },[]);\n \n  return { state, setDay, bookInterview, cancelInterview };\n}"]},"metadata":{},"sourceType":"module"}