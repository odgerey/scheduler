{"ast":null,"code":"import { useState } from 'react';\nexport default function useVisualMode(initial) {\n  const [mode, setMode] = useState(initial);\n  const [history, setHistory] = useState([initial]);\n\n  function transition(mode, replace = false) {\n    if (replace) {\n      setMode(mode);\n      history[history.length - 1] = mode;\n    } else {\n      setMode(mode);\n      setHistory(prev => [...prev, mode]);\n    }\n  }\n\n  function back() {\n    if (history.length === 1) return;\n    {\n      history.pop();\n      setMode(history[history.length - 1]);\n    }\n  }\n\n  return {\n    mode,\n    transition,\n    back\n  };\n}","map":{"version":3,"sources":["/Users/michel/lighthouse/w7/sched/src/hooks/useVisualMode.js"],"names":["useState","useVisualMode","initial","mode","setMode","history","setHistory","transition","replace","length","prev","back","pop"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,aAAT,CAAwBC,OAAxB,EAAiC;AAC9C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACE,OAAD,CAAhC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAACE,OAAD,CAAD,CAAtC;;AAGA,WAASK,UAAT,CAAqBJ,IAArB,EAA2BK,OAAO,GAAG,KAArC,EAA4C;AAC1C,QAAIA,OAAJ,EAAY;AACVJ,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAE,MAAAA,OAAO,CAACA,OAAO,CAACI,MAAR,GAAgB,CAAjB,CAAP,GAA6BN,IAA7B;AACD,KAHD,MAGO;AACLC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,UAAU,CAACI,IAAI,IAAK,CAAC,GAAGA,IAAJ,EAAUP,IAAV,CAAV,CAAV;AACD;AACF;;AACD,WAASQ,IAAT,GAAiB;AACf,QAAIN,OAAO,CAACI,MAAR,KAAmB,CAAvB,EAA0B;AAAO;AAC/BJ,MAAAA,OAAO,CAACO,GAAR;AACAR,MAAAA,OAAO,CAACC,OAAO,CAACA,OAAO,CAACI,MAAR,GAAgB,CAAjB,CAAR,CAAP;AACD;AACF;;AACD,SAAO;AAAEN,IAAAA,IAAF;AAAQI,IAAAA,UAAR;AAAoBI,IAAAA;AAApB,GAAP;AACD","sourcesContent":["import { useState } from 'react'\n\nexport default function useVisualMode (initial) {\n  const [mode, setMode] = useState(initial);\n  const [history, setHistory] = useState([initial]);\n\n \n  function transition (mode, replace = false) {\n    if (replace){\n      setMode(mode);\n      history[history.length -1] = mode;\n    } else {\n      setMode(mode)\n      setHistory(prev => ([...prev, mode]))\n    }\n  }\n  function back () {\n    if (history.length === 1) return;{\n      history.pop();\n      setMode(history[history.length -1])\n    } \n  }\n  return { mode, transition, back };\n}"]},"metadata":{},"sourceType":"module"}