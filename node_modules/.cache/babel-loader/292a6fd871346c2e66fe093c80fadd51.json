{"ast":null,"code":"export function getAppointmentsForDay(state, day) {\n  const filteredDay = state.days.find(({\n    name\n  }) => name === day);\n  const appointments = filteredDay ? filteredDay.appointments.map(appointment => state.appointments[appointment]) : [];\n  return appointments;\n}\nexport function getInterview(state, interview) {\n  let newObject;\n\n  if (interview) {\n    newObject = {\n      \"student\": interview.student,\n      \"interviewer\": state.interviewers[interview.interviewer]\n    };\n    return newObject;\n  } else {\n    return null;\n  }\n}\nexport function getInterviewersForDay(state, day) {\n  const filteredDay = state.days.find(({\n    name\n  }) => name === day);\n  const interviewers = filteredDay ? filteredDay.interviewers.map(interviewer => state.interviewers[interviewer]) : [];\n  console.log(\"Interviewers => \", interviewers);\n  console.log(\"Filtered Days => \", filteredDay);\n  return interviewers;\n}","map":{"version":3,"sources":["/Users/michel/lighthouse/w7/sched/src/helpers/selectors.js"],"names":["getAppointmentsForDay","state","day","filteredDay","days","find","name","appointments","map","appointment","getInterview","interview","newObject","student","interviewers","interviewer","getInterviewersForDay","console","log"],"mappings":"AAAA,OAAO,SAASA,qBAAT,CAA+BC,KAA/B,EAAsCC,GAAtC,EAA2C;AAChD,QAAMC,WAAW,GAAGF,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgB,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAYA,IAAI,KAAKJ,GAArC,CAApB;AACA,QAAMK,YAAY,GAAGJ,WAAW,GAAGA,WAAW,CAACI,YAAZ,CAAyBC,GAAzB,CAA6BC,WAAW,IAAIR,KAAK,CAACM,YAAN,CAAmBE,WAAnB,CAA5C,CAAH,GAAkF,EAAlH;AACA,SAAOF,YAAP;AACD;AAGD,OAAO,SAASG,YAAT,CAAsBT,KAAtB,EAA6BU,SAA7B,EAAwC;AAC7C,MAAIC,SAAJ;;AACA,MAAGD,SAAH,EAAc;AACZC,IAAAA,SAAS,GAAI;AACX,iBAAYD,SAAS,CAACE,OADX;AAEX,qBAAeZ,KAAK,CAACa,YAAN,CAAmBH,SAAS,CAACI,WAA7B;AAFJ,KAAb;AAIA,WAAOH,SAAP;AACD,GAND,MAMO;AACL,WAAO,IAAP;AACD;AAEF;AAGD,OAAO,SAASI,qBAAT,CAA+Bf,KAA/B,EAAsCC,GAAtC,EAA2C;AAChD,QAAMC,WAAW,GAAGF,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgB,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAYA,IAAI,KAAKJ,GAArC,CAApB;AACA,QAAMY,YAAY,GAAGX,WAAW,GAAGA,WAAW,CAACW,YAAZ,CAAyBN,GAAzB,CAA6BO,WAAW,IAAId,KAAK,CAACa,YAAN,CAAmBC,WAAnB,CAA5C,CAAH,GAAkF,EAAlH;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,YAAhC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCf,WAAjC;AACA,SAAOW,YAAP;AACD","sourcesContent":["export function getAppointmentsForDay(state, day) {\n  const filteredDay = state.days.find(({name}) => name === day)\n  const appointments = filteredDay ? filteredDay.appointments.map(appointment => state.appointments[appointment]) : [];\n  return appointments;\n}\n\n\nexport function getInterview(state, interview) {\n  let newObject\n  if(interview) {\n    newObject =  { \n      \"student\" : interview.student,\n      \"interviewer\": state.interviewers[interview.interviewer]\n    }\n    return newObject;\n  } else {\n    return null;\n  }\n\n}\n\n\nexport function getInterviewersForDay(state, day) {\n  const filteredDay = state.days.find(({name}) => name === day)\n  const interviewers = filteredDay ? filteredDay.interviewers.map(interviewer => state.interviewers[interviewer]) : [];\n  console.log(\"Interviewers => \", interviewers)\n  console.log(\"Filtered Days => \", filteredDay)\n  return interviewers;\n}"]},"metadata":{},"sourceType":"module"}