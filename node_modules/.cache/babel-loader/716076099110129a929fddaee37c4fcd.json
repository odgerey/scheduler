{"ast":null,"code":"var _jsxFileName = \"/Users/michel/lighthouse/w7/sched/src/components/Appointment/Form.js\";\nimport React, { useState } from 'react';\nimport InterviewerList from \"../InterviewerList\";\nimport Button from \"../Button\";\nexport default function Form(props) {\n  const [name, setName] = useState(props.name || \"\");\n  const [interviewer, setInterviewer] = useState(props.interviewer || null);\n  const [error, setError] = useState(\"\");\n\n  function reset() {\n    setName(\"\");\n    setInterviewer(null);\n  }\n\n  function cancel() {\n    props.onCancel();\n    reset();\n  }\n\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return error;\n    }\n\n    setError(\"\");\n    props.onSave(name, interviewer);\n  }\n\n  function save() {\n    validate();\n  }\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"appointment__card appointment__card--create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__card-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: event => event.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"appointment__create-input text--semi-bold\",\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Enter Student Name\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    \"data-testid\": \"student-name-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), console.log(name), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__validation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, error), /*#__PURE__*/React.createElement(InterviewerList, {\n    interviewers: props.interviewers,\n    value: interviewer,\n    onChange: setInterviewer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__card-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    onClick: cancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    confirm: true,\n    onClick: save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["/Users/michel/lighthouse/w7/sched/src/components/Appointment/Form.js"],"names":["React","useState","InterviewerList","Button","Form","props","name","setName","interviewer","setInterviewer","error","setError","reset","cancel","onCancel","validate","onSave","save","event","preventDefault","target","value","console","log","interviewers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,eAAe,SAASC,IAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAEI,KAAK,CAACC,IAAN,IAAc,EAAhB,CAAhC;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAEI,KAAK,CAACG,WAAN,IAAqB,IAAvB,CAA9C;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASW,KAAT,GAAiB;AACfL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AAED,WAASI,MAAT,GAAkB;AAChBR,IAAAA,KAAK,CAACS,QAAN;AACAF,IAAAA,KAAK;AACN;;AAGD,WAASG,QAAT,GAAoB;AAClB,QAAIT,IAAI,KAAK,EAAb,EAAiB;AACfK,MAAAA,QAAQ,CAAC,8BAAD,CAAR;AACA,aAAOD,KAAP;AACD;;AAEDC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAN,IAAAA,KAAK,CAACW,MAAN,CAAaV,IAAb,EAAmBE,WAAnB;AACD;;AAED,WAASS,IAAT,GAAgB;AACdF,IAAAA,QAAQ;AACT;;AACD,sBACE;AAAM,IAAA,SAAS,EAAC,6CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAC,wBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,YAAY,EAAC,KADf;AAEE,IAAA,QAAQ,EAAEG,KAAK,IAAIA,KAAK,CAACC,cAAN,EAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AACE,IAAA,SAAS,EAAC,2CADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,oBAJd;AAKE,IAAA,KAAK,EAAEb,IALT;AAME,IAAA,QAAQ,EAAEY,KAAK,IAAIX,OAAO,CAACW,KAAK,CAACE,MAAN,CAAaC,KAAd,CAN5B;AAOE,mBAAY,oBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAcGC,OAAO,CAACC,GAAR,CAAYjB,IAAZ,CAdH,eAeE;AAAS,IAAA,SAAS,EAAC,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CI,KAA9C,CAfF,eAgBE,oBAAC,eAAD;AACE,IAAA,YAAY,EAAEL,KAAK,CAACmB,YADtB;AAEE,IAAA,KAAK,EAAEhB,WAFT;AAGE,IAAA,QAAQ,EAAEC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF,eAuBE;AAAS,IAAA,SAAS,EAAC,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,OAAO,EAAEI,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAEI,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,CAvBF,CADF;AAgCD","sourcesContent":["import React, { useState } from 'react';\nimport InterviewerList from \"../InterviewerList\";\nimport Button from \"../Button\";\n\nexport default function Form (props) {\n  const [name, setName] = useState (props.name || \"\");\n  const [interviewer, setInterviewer] = useState (props.interviewer || null);\n  const [error, setError] = useState(\"\")\n\n  function reset() {\n    setName(\"\")\n    setInterviewer(null)\n  }\n\n  function cancel() {\n    props.onCancel()\n    reset();\n  }\n\n\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return error;\n    }\n  \n    setError(\"\");\n    props.onSave(name, interviewer);\n  }\n\n  function save() {\n    validate()\n  }\n  return (\n    <main className=\"appointment__card appointment__card--create\">\n      <section className=\"appointment__card-left\">\n        <form \n          autoComplete=\"off\" \n          onSubmit={event => event.preventDefault()}>\n          <input\n            className=\"appointment__create-input text--semi-bold\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter Student Name\"\n            value={name}\n            onChange={event => setName(event.target.value)}\n            data-testid=\"student-name-input\"\n          />\n        </form>\n        {console.log(name)}\n        <section className=\"appointment__validation\">{error}</section>\n        <InterviewerList \n          interviewers={props.interviewers} \n          value={interviewer} \n          onChange={setInterviewer}\n        />\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <Button danger onClick={cancel}>Cancel</Button>\n          <Button confirm onClick={save}>Save</Button>\n        </section> \n      </section>\n    </main>\n  )\n}"]},"metadata":{},"sourceType":"module"}